### YamlMime:XRefMap
sorted: true
references:
- uid: LDtk
  name: LDtk
  href: api/LDtk.html
  commentId: N:LDtk
  fullName: LDtk
  nameWithType: LDtk
- uid: LDtk.Entity
  name: Entity
  href: api/LDtk.Entity.html
  commentId: T:LDtk.Entity
  fullName: LDtk.Entity
  nameWithType: Entity
- uid: LDtk.Entity.LevelPosition
  name: LevelPosition
  href: api/LDtk.Entity.html#LDtk_Entity_LevelPosition
  commentId: P:LDtk.Entity.LevelPosition
  fullName: LDtk.Entity.LevelPosition
  nameWithType: Entity.LevelPosition
- uid: LDtk.Entity.LevelPosition*
  name: LevelPosition
  href: api/LDtk.Entity.html#LDtk_Entity_LevelPosition_
  commentId: Overload:LDtk.Entity.LevelPosition
  isSpec: "True"
  fullName: LDtk.Entity.LevelPosition
  nameWithType: Entity.LevelPosition
- uid: LDtk.Entity.Pivot
  name: Pivot
  href: api/LDtk.Entity.html#LDtk_Entity_Pivot
  commentId: P:LDtk.Entity.Pivot
  fullName: LDtk.Entity.Pivot
  nameWithType: Entity.Pivot
- uid: LDtk.Entity.Pivot*
  name: Pivot
  href: api/LDtk.Entity.html#LDtk_Entity_Pivot_
  commentId: Overload:LDtk.Entity.Pivot
  isSpec: "True"
  fullName: LDtk.Entity.Pivot
  nameWithType: Entity.Pivot
- uid: LDtk.Entity.Position
  name: Position
  href: api/LDtk.Entity.html#LDtk_Entity_Position
  commentId: P:LDtk.Entity.Position
  fullName: LDtk.Entity.Position
  nameWithType: Entity.Position
- uid: LDtk.Entity.Position*
  name: Position
  href: api/LDtk.Entity.html#LDtk_Entity_Position_
  commentId: Overload:LDtk.Entity.Position
  isSpec: "True"
  fullName: LDtk.Entity.Position
  nameWithType: Entity.Position
- uid: LDtk.Entity.Size
  name: Size
  href: api/LDtk.Entity.html#LDtk_Entity_Size
  commentId: P:LDtk.Entity.Size
  fullName: LDtk.Entity.Size
  nameWithType: Entity.Size
- uid: LDtk.Entity.Size*
  name: Size
  href: api/LDtk.Entity.html#LDtk_Entity_Size_
  commentId: Overload:LDtk.Entity.Size
  isSpec: "True"
  fullName: LDtk.Entity.Size
  nameWithType: Entity.Size
- uid: LDtk.Entity.Texture
  name: Texture
  href: api/LDtk.Entity.html#LDtk_Entity_Texture
  commentId: P:LDtk.Entity.Texture
  fullName: LDtk.Entity.Texture
  nameWithType: Entity.Texture
- uid: LDtk.Entity.Texture*
  name: Texture
  href: api/LDtk.Entity.html#LDtk_Entity_Texture_
  commentId: Overload:LDtk.Entity.Texture
  isSpec: "True"
  fullName: LDtk.Entity.Texture
  nameWithType: Entity.Texture
- uid: LDtk.Entity.Tile
  name: Tile
  href: api/LDtk.Entity.html#LDtk_Entity_Tile
  commentId: P:LDtk.Entity.Tile
  fullName: LDtk.Entity.Tile
  nameWithType: Entity.Tile
- uid: LDtk.Entity.Tile*
  name: Tile
  href: api/LDtk.Entity.html#LDtk_Entity_Tile_
  commentId: Overload:LDtk.Entity.Tile
  isSpec: "True"
  fullName: LDtk.Entity.Tile
  nameWithType: Entity.Tile
- uid: LDtk.FieldInstanceException
  name: FieldInstanceException
  href: api/LDtk.FieldInstanceException.html
  commentId: T:LDtk.FieldInstanceException
  fullName: LDtk.FieldInstanceException
  nameWithType: FieldInstanceException
- uid: LDtk.FieldInstanceException.#ctor
  name: FieldInstanceException()
  href: api/LDtk.FieldInstanceException.html#LDtk_FieldInstanceException__ctor
  commentId: M:LDtk.FieldInstanceException.#ctor
  fullName: LDtk.FieldInstanceException.FieldInstanceException()
  nameWithType: FieldInstanceException.FieldInstanceException()
- uid: LDtk.FieldInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: FieldInstanceException(SerializationInfo, StreamingContext)
  href: api/LDtk.FieldInstanceException.html#LDtk_FieldInstanceException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:LDtk.FieldInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: LDtk.FieldInstanceException.FieldInstanceException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: FieldInstanceException.FieldInstanceException(SerializationInfo, StreamingContext)
- uid: LDtk.FieldInstanceException.#ctor(System.String)
  name: FieldInstanceException(String)
  href: api/LDtk.FieldInstanceException.html#LDtk_FieldInstanceException__ctor_System_String_
  commentId: M:LDtk.FieldInstanceException.#ctor(System.String)
  fullName: LDtk.FieldInstanceException.FieldInstanceException(System.String)
  nameWithType: FieldInstanceException.FieldInstanceException(String)
- uid: LDtk.FieldInstanceException.#ctor(System.String,System.Exception)
  name: FieldInstanceException(String, Exception)
  href: api/LDtk.FieldInstanceException.html#LDtk_FieldInstanceException__ctor_System_String_System_Exception_
  commentId: M:LDtk.FieldInstanceException.#ctor(System.String,System.Exception)
  fullName: LDtk.FieldInstanceException.FieldInstanceException(System.String, System.Exception)
  nameWithType: FieldInstanceException.FieldInstanceException(String, Exception)
- uid: LDtk.FieldInstanceException.#ctor*
  name: FieldInstanceException
  href: api/LDtk.FieldInstanceException.html#LDtk_FieldInstanceException__ctor_
  commentId: Overload:LDtk.FieldInstanceException.#ctor
  isSpec: "True"
  fullName: LDtk.FieldInstanceException.FieldInstanceException
  nameWithType: FieldInstanceException.FieldInstanceException
- uid: LDtk.IntGrid
  name: IntGrid
  href: api/LDtk.IntGrid.html
  commentId: T:LDtk.IntGrid
  fullName: LDtk.IntGrid
  nameWithType: IntGrid
- uid: LDtk.IntGrid.FromWorldToGridSpace(Microsoft.Xna.Framework.Vector2)
  name: FromWorldToGridSpace(Vector2)
  href: api/LDtk.IntGrid.html#LDtk_IntGrid_FromWorldToGridSpace_Microsoft_Xna_Framework_Vector2_
  commentId: M:LDtk.IntGrid.FromWorldToGridSpace(Microsoft.Xna.Framework.Vector2)
  fullName: LDtk.IntGrid.FromWorldToGridSpace(Microsoft.Xna.Framework.Vector2)
  nameWithType: IntGrid.FromWorldToGridSpace(Vector2)
- uid: LDtk.IntGrid.FromWorldToGridSpace*
  name: FromWorldToGridSpace
  href: api/LDtk.IntGrid.html#LDtk_IntGrid_FromWorldToGridSpace_
  commentId: Overload:LDtk.IntGrid.FromWorldToGridSpace
  isSpec: "True"
  fullName: LDtk.IntGrid.FromWorldToGridSpace
  nameWithType: IntGrid.FromWorldToGridSpace
- uid: LDtk.IntGrid.GetValueAt(System.Int32,System.Int32)
  name: GetValueAt(Int32, Int32)
  href: api/LDtk.IntGrid.html#LDtk_IntGrid_GetValueAt_System_Int32_System_Int32_
  commentId: M:LDtk.IntGrid.GetValueAt(System.Int32,System.Int32)
  fullName: LDtk.IntGrid.GetValueAt(System.Int32, System.Int32)
  nameWithType: IntGrid.GetValueAt(Int32, Int32)
- uid: LDtk.IntGrid.GetValueAt*
  name: GetValueAt
  href: api/LDtk.IntGrid.html#LDtk_IntGrid_GetValueAt_
  commentId: Overload:LDtk.IntGrid.GetValueAt
  isSpec: "True"
  fullName: LDtk.IntGrid.GetValueAt
  nameWithType: IntGrid.GetValueAt
- uid: LDtk.IntGrid.TileSize
  name: TileSize
  href: api/LDtk.IntGrid.html#LDtk_IntGrid_TileSize
  commentId: P:LDtk.IntGrid.TileSize
  fullName: LDtk.IntGrid.TileSize
  nameWithType: IntGrid.TileSize
- uid: LDtk.IntGrid.TileSize*
  name: TileSize
  href: api/LDtk.IntGrid.html#LDtk_IntGrid_TileSize_
  commentId: Overload:LDtk.IntGrid.TileSize
  isSpec: "True"
  fullName: LDtk.IntGrid.TileSize
  nameWithType: IntGrid.TileSize
- uid: LDtk.IntGridNotFoundException
  name: IntGridNotFoundException
  href: api/LDtk.IntGridNotFoundException.html
  commentId: T:LDtk.IntGridNotFoundException
  fullName: LDtk.IntGridNotFoundException
  nameWithType: IntGridNotFoundException
- uid: LDtk.IntGridNotFoundException.#ctor
  name: IntGridNotFoundException()
  href: api/LDtk.IntGridNotFoundException.html#LDtk_IntGridNotFoundException__ctor
  commentId: M:LDtk.IntGridNotFoundException.#ctor
  fullName: LDtk.IntGridNotFoundException.IntGridNotFoundException()
  nameWithType: IntGridNotFoundException.IntGridNotFoundException()
- uid: LDtk.IntGridNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: IntGridNotFoundException(SerializationInfo, StreamingContext)
  href: api/LDtk.IntGridNotFoundException.html#LDtk_IntGridNotFoundException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:LDtk.IntGridNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: LDtk.IntGridNotFoundException.IntGridNotFoundException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: IntGridNotFoundException.IntGridNotFoundException(SerializationInfo, StreamingContext)
- uid: LDtk.IntGridNotFoundException.#ctor(System.String)
  name: IntGridNotFoundException(String)
  href: api/LDtk.IntGridNotFoundException.html#LDtk_IntGridNotFoundException__ctor_System_String_
  commentId: M:LDtk.IntGridNotFoundException.#ctor(System.String)
  fullName: LDtk.IntGridNotFoundException.IntGridNotFoundException(System.String)
  nameWithType: IntGridNotFoundException.IntGridNotFoundException(String)
- uid: LDtk.IntGridNotFoundException.#ctor(System.String,System.Exception)
  name: IntGridNotFoundException(String, Exception)
  href: api/LDtk.IntGridNotFoundException.html#LDtk_IntGridNotFoundException__ctor_System_String_System_Exception_
  commentId: M:LDtk.IntGridNotFoundException.#ctor(System.String,System.Exception)
  fullName: LDtk.IntGridNotFoundException.IntGridNotFoundException(System.String, System.Exception)
  nameWithType: IntGridNotFoundException.IntGridNotFoundException(String, Exception)
- uid: LDtk.IntGridNotFoundException.#ctor*
  name: IntGridNotFoundException
  href: api/LDtk.IntGridNotFoundException.html#LDtk_IntGridNotFoundException__ctor_
  commentId: Overload:LDtk.IntGridNotFoundException.#ctor
  isSpec: "True"
  fullName: LDtk.IntGridNotFoundException.IntGridNotFoundException
  nameWithType: IntGridNotFoundException.IntGridNotFoundException
- uid: LDtk.Level
  name: Level
  href: api/LDtk.Level.html
  commentId: T:LDtk.Level
  fullName: LDtk.Level
  nameWithType: Level
- uid: LDtk.Level.BgColor
  name: BgColor
  href: api/LDtk.Level.html#LDtk_Level_BgColor
  commentId: P:LDtk.Level.BgColor
  fullName: LDtk.Level.BgColor
  nameWithType: Level.BgColor
- uid: LDtk.Level.BgColor*
  name: BgColor
  href: api/LDtk.Level.html#LDtk_Level_BgColor_
  commentId: Overload:LDtk.Level.BgColor
  isSpec: "True"
  fullName: LDtk.Level.BgColor
  nameWithType: Level.BgColor
- uid: LDtk.Level.GetEntities(System.String)
  name: GetEntities(String)
  href: api/LDtk.Level.html#LDtk_Level_GetEntities_System_String_
  commentId: M:LDtk.Level.GetEntities(System.String)
  fullName: LDtk.Level.GetEntities(System.String)
  nameWithType: Level.GetEntities(String)
- uid: LDtk.Level.GetEntities*
  name: GetEntities
  href: api/LDtk.Level.html#LDtk_Level_GetEntities_
  commentId: Overload:LDtk.Level.GetEntities
  isSpec: "True"
  fullName: LDtk.Level.GetEntities
  nameWithType: Level.GetEntities
- uid: LDtk.Level.GetEntities``1
  name: GetEntities<T>()
  href: api/LDtk.Level.html#LDtk_Level_GetEntities__1
  commentId: M:LDtk.Level.GetEntities``1
  name.vb: GetEntities(Of T)()
  fullName: LDtk.Level.GetEntities<T>()
  fullName.vb: LDtk.Level.GetEntities(Of T)()
  nameWithType: Level.GetEntities<T>()
  nameWithType.vb: Level.GetEntities(Of T)()
- uid: LDtk.Level.GetEntities``1(System.String)
  name: GetEntities<T>(String)
  href: api/LDtk.Level.html#LDtk_Level_GetEntities__1_System_String_
  commentId: M:LDtk.Level.GetEntities``1(System.String)
  name.vb: GetEntities(Of T)(String)
  fullName: LDtk.Level.GetEntities<T>(System.String)
  fullName.vb: LDtk.Level.GetEntities(Of T)(System.String)
  nameWithType: Level.GetEntities<T>(String)
  nameWithType.vb: Level.GetEntities(Of T)(String)
- uid: LDtk.Level.GetEntity(System.String)
  name: GetEntity(String)
  href: api/LDtk.Level.html#LDtk_Level_GetEntity_System_String_
  commentId: M:LDtk.Level.GetEntity(System.String)
  fullName: LDtk.Level.GetEntity(System.String)
  nameWithType: Level.GetEntity(String)
- uid: LDtk.Level.GetEntity*
  name: GetEntity
  href: api/LDtk.Level.html#LDtk_Level_GetEntity_
  commentId: Overload:LDtk.Level.GetEntity
  isSpec: "True"
  fullName: LDtk.Level.GetEntity
  nameWithType: Level.GetEntity
- uid: LDtk.Level.GetEntity``1
  name: GetEntity<T>()
  href: api/LDtk.Level.html#LDtk_Level_GetEntity__1
  commentId: M:LDtk.Level.GetEntity``1
  name.vb: GetEntity(Of T)()
  fullName: LDtk.Level.GetEntity<T>()
  fullName.vb: LDtk.Level.GetEntity(Of T)()
  nameWithType: Level.GetEntity<T>()
  nameWithType.vb: Level.GetEntity(Of T)()
- uid: LDtk.Level.GetEntity``1(System.String)
  name: GetEntity<T>(String)
  href: api/LDtk.Level.html#LDtk_Level_GetEntity__1_System_String_
  commentId: M:LDtk.Level.GetEntity``1(System.String)
  name.vb: GetEntity(Of T)(String)
  fullName: LDtk.Level.GetEntity<T>(System.String)
  fullName.vb: LDtk.Level.GetEntity(Of T)(System.String)
  nameWithType: Level.GetEntity<T>(String)
  nameWithType.vb: Level.GetEntity(Of T)(String)
- uid: LDtk.Level.GetIntGrid(System.String)
  name: GetIntGrid(String)
  href: api/LDtk.Level.html#LDtk_Level_GetIntGrid_System_String_
  commentId: M:LDtk.Level.GetIntGrid(System.String)
  fullName: LDtk.Level.GetIntGrid(System.String)
  nameWithType: Level.GetIntGrid(String)
- uid: LDtk.Level.GetIntGrid*
  name: GetIntGrid
  href: api/LDtk.Level.html#LDtk_Level_GetIntGrid_
  commentId: Overload:LDtk.Level.GetIntGrid
  isSpec: "True"
  fullName: LDtk.Level.GetIntGrid
  nameWithType: Level.GetIntGrid
- uid: LDtk.Level.Identifier
  name: Identifier
  href: api/LDtk.Level.html#LDtk_Level_Identifier
  commentId: P:LDtk.Level.Identifier
  fullName: LDtk.Level.Identifier
  nameWithType: Level.Identifier
- uid: LDtk.Level.Identifier*
  name: Identifier
  href: api/LDtk.Level.html#LDtk_Level_Identifier_
  commentId: Overload:LDtk.Level.Identifier
  isSpec: "True"
  fullName: LDtk.Level.Identifier
  nameWithType: Level.Identifier
- uid: LDtk.Level.Layers
  name: Layers
  href: api/LDtk.Level.html#LDtk_Level_Layers
  commentId: P:LDtk.Level.Layers
  fullName: LDtk.Level.Layers
  nameWithType: Level.Layers
- uid: LDtk.Level.Layers*
  name: Layers
  href: api/LDtk.Level.html#LDtk_Level_Layers_
  commentId: Overload:LDtk.Level.Layers
  isSpec: "True"
  fullName: LDtk.Level.Layers
  nameWithType: Level.Layers
- uid: LDtk.Level.Neighbours
  name: Neighbours
  href: api/LDtk.Level.html#LDtk_Level_Neighbours
  commentId: P:LDtk.Level.Neighbours
  fullName: LDtk.Level.Neighbours
  nameWithType: Level.Neighbours
- uid: LDtk.Level.Neighbours*
  name: Neighbours
  href: api/LDtk.Level.html#LDtk_Level_Neighbours_
  commentId: Overload:LDtk.Level.Neighbours
  isSpec: "True"
  fullName: LDtk.Level.Neighbours
  nameWithType: Level.Neighbours
- uid: LDtk.Level.Position
  name: Position
  href: api/LDtk.Level.html#LDtk_Level_Position
  commentId: P:LDtk.Level.Position
  fullName: LDtk.Level.Position
  nameWithType: Level.Position
- uid: LDtk.Level.Position*
  name: Position
  href: api/LDtk.Level.html#LDtk_Level_Position_
  commentId: Overload:LDtk.Level.Position
  isSpec: "True"
  fullName: LDtk.Level.Position
  nameWithType: Level.Position
- uid: LDtk.Level.Size
  name: Size
  href: api/LDtk.Level.html#LDtk_Level_Size
  commentId: P:LDtk.Level.Size
  fullName: LDtk.Level.Size
  nameWithType: Level.Size
- uid: LDtk.Level.Size*
  name: Size
  href: api/LDtk.Level.html#LDtk_Level_Size_
  commentId: Overload:LDtk.Level.Size
  isSpec: "True"
  fullName: LDtk.Level.Size
  nameWithType: Level.Size
- uid: LDtk.Level.Uid
  name: Uid
  href: api/LDtk.Level.html#LDtk_Level_Uid
  commentId: P:LDtk.Level.Uid
  fullName: LDtk.Level.Uid
  nameWithType: Level.Uid
- uid: LDtk.Level.Uid*
  name: Uid
  href: api/LDtk.Level.html#LDtk_Level_Uid_
  commentId: Overload:LDtk.Level.Uid
  isSpec: "True"
  fullName: LDtk.Level.Uid
  nameWithType: Level.Uid
- uid: LDtk.UidException
  name: UidException
  href: api/LDtk.UidException.html
  commentId: T:LDtk.UidException
  fullName: LDtk.UidException
  nameWithType: UidException
- uid: LDtk.UidException.#ctor
  name: UidException()
  href: api/LDtk.UidException.html#LDtk_UidException__ctor
  commentId: M:LDtk.UidException.#ctor
  fullName: LDtk.UidException.UidException()
  nameWithType: UidException.UidException()
- uid: LDtk.UidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: UidException(SerializationInfo, StreamingContext)
  href: api/LDtk.UidException.html#LDtk_UidException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:LDtk.UidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: LDtk.UidException.UidException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: UidException.UidException(SerializationInfo, StreamingContext)
- uid: LDtk.UidException.#ctor(System.String)
  name: UidException(String)
  href: api/LDtk.UidException.html#LDtk_UidException__ctor_System_String_
  commentId: M:LDtk.UidException.#ctor(System.String)
  fullName: LDtk.UidException.UidException(System.String)
  nameWithType: UidException.UidException(String)
- uid: LDtk.UidException.#ctor(System.String,System.Exception)
  name: UidException(String, Exception)
  href: api/LDtk.UidException.html#LDtk_UidException__ctor_System_String_System_Exception_
  commentId: M:LDtk.UidException.#ctor(System.String,System.Exception)
  fullName: LDtk.UidException.UidException(System.String, System.Exception)
  nameWithType: UidException.UidException(String, Exception)
- uid: LDtk.UidException.#ctor*
  name: UidException
  href: api/LDtk.UidException.html#LDtk_UidException__ctor_
  commentId: Overload:LDtk.UidException.#ctor
  isSpec: "True"
  fullName: LDtk.UidException.UidException
  nameWithType: UidException.UidException
- uid: LDtk.World
  name: World
  href: api/LDtk.World.html
  commentId: T:LDtk.World
  fullName: LDtk.World
  nameWithType: World
- uid: LDtk.World.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String)
  name: World(SpriteBatch, String)
  href: api/LDtk.World.html#LDtk_World__ctor_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_String_
  commentId: M:LDtk.World.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String)
  fullName: LDtk.World.World(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.String)
  nameWithType: World.World(SpriteBatch, String)
- uid: LDtk.World.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Content.ContentManager)
  name: World(SpriteBatch, String, ContentManager)
  href: api/LDtk.World.html#LDtk_World__ctor_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_String_Microsoft_Xna_Framework_Content_ContentManager_
  commentId: M:LDtk.World.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Content.ContentManager)
  fullName: LDtk.World.World(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.String, Microsoft.Xna.Framework.Content.ContentManager)
  nameWithType: World.World(SpriteBatch, String, ContentManager)
- uid: LDtk.World.#ctor*
  name: World
  href: api/LDtk.World.html#LDtk_World__ctor_
  commentId: Overload:LDtk.World.#ctor
  isSpec: "True"
  fullName: LDtk.World.World
  nameWithType: World.World
- uid: LDtk.World.GetLevel(System.Int64)
  name: GetLevel(Int64)
  href: api/LDtk.World.html#LDtk_World_GetLevel_System_Int64_
  commentId: M:LDtk.World.GetLevel(System.Int64)
  fullName: LDtk.World.GetLevel(System.Int64)
  nameWithType: World.GetLevel(Int64)
- uid: LDtk.World.GetLevel(System.String)
  name: GetLevel(String)
  href: api/LDtk.World.html#LDtk_World_GetLevel_System_String_
  commentId: M:LDtk.World.GetLevel(System.String)
  fullName: LDtk.World.GetLevel(System.String)
  nameWithType: World.GetLevel(String)
- uid: LDtk.World.GetLevel*
  name: GetLevel
  href: api/LDtk.World.html#LDtk_World_GetLevel_
  commentId: Overload:LDtk.World.GetLevel
  isSpec: "True"
  fullName: LDtk.World.GetLevel
  nameWithType: World.GetLevel
- uid: LDtk.World.GetLevel``1(System.Int64)
  name: GetLevel<T>(Int64)
  href: api/LDtk.World.html#LDtk_World_GetLevel__1_System_Int64_
  commentId: M:LDtk.World.GetLevel``1(System.Int64)
  name.vb: GetLevel(Of T)(Int64)
  fullName: LDtk.World.GetLevel<T>(System.Int64)
  fullName.vb: LDtk.World.GetLevel(Of T)(System.Int64)
  nameWithType: World.GetLevel<T>(Int64)
  nameWithType.vb: World.GetLevel(Of T)(Int64)
- uid: LDtk.World.GetLevel``1(System.String)
  name: GetLevel<T>(String)
  href: api/LDtk.World.html#LDtk_World_GetLevel__1_System_String_
  commentId: M:LDtk.World.GetLevel``1(System.String)
  name.vb: GetLevel(Of T)(String)
  fullName: LDtk.World.GetLevel<T>(System.String)
  fullName.vb: LDtk.World.GetLevel(Of T)(System.String)
  nameWithType: World.GetLevel<T>(String)
  nameWithType.vb: World.GetLevel(Of T)(String)
- uid: LDtk.World.LoadLevel(System.Int64)
  name: LoadLevel(Int64)
  href: api/LDtk.World.html#LDtk_World_LoadLevel_System_Int64_
  commentId: M:LDtk.World.LoadLevel(System.Int64)
  fullName: LDtk.World.LoadLevel(System.Int64)
  nameWithType: World.LoadLevel(Int64)
- uid: LDtk.World.LoadLevel(System.String)
  name: LoadLevel(String)
  href: api/LDtk.World.html#LDtk_World_LoadLevel_System_String_
  commentId: M:LDtk.World.LoadLevel(System.String)
  fullName: LDtk.World.LoadLevel(System.String)
  nameWithType: World.LoadLevel(String)
- uid: LDtk.World.LoadLevel*
  name: LoadLevel
  href: api/LDtk.World.html#LDtk_World_LoadLevel_
  commentId: Overload:LDtk.World.LoadLevel
  isSpec: "True"
  fullName: LDtk.World.LoadLevel
  nameWithType: World.LoadLevel
